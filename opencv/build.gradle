apply plugin: 'com.android.library'
//apply plugin: 'maven-publish'

group="com.zynkware"

def openCVersionName = "4.4.2"
def libraryVersionCode = 5

android {
    compileSdk 35
    buildToolsVersion "35.0.0"
    namespace "org.opencv"

    defaultConfig {
        minSdk 21
        targetSdk 35

        versionCode libraryVersionCode
        versionName openCVersionName

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared",
                          "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
                targets "opencv_jni_shared"
            }
        }
    }

    buildTypes {
        debug {
            packagingOptions {
                jniLibs {
                    keepDebugSymbols += ['**/*.so']
                }
            }
        }
        release {
            packagingOptions {
                jniLibs {
                    keepDebugSymbols += ['**/*.so']
                }
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
        main.jniLibs.srcDirs = ['src/main/jniLibs']
        main.res.srcDirs = ['src/main/res']
        main.manifest.srcFile 'src/main/AndroidManifest.xml'
    }

    externalNativeBuild {
        cmake {
            path (project.projectDir.toString() + '/libcxx_helper/CMakeLists.txt')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    from fileTree(dir: 'src/libs', include: ['*.jar'])
    archiveClassifier.set('sources')
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
